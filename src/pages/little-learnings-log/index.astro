---
import { getCollection } from "astro:content";
import Layout from "../../layouts/Layout.astro";

/*
const littleLearningsLog = await getCollection("little-learnings-log");
const littleLearningsSorted = littleLearningsLog.sort((a, b) => {
    return b.data.date.getTime() - a.data.date.getTime();
});

const tagColors = {
    node: "green",
    js: "#a89132",
};
*/
---

<!-- 
<Layout title="Little Learnings Log">
    <h2>Little Learnings Log</h2>
    <p>This is a collection of little things that I've learned.</p>
    <ul>
        {
            littleLearningsSorted.map((littleLearning) => (
                <li>
                    <a href={`/little-learnings/${littleLearning.slug}`}>
                        {littleLearning.data.date.toLocaleDateString()}{" "}
                        <b>{littleLearning.data.title}</b>{" "}
                    </a>
                    {(littleLearning.data.tags ?? []).map((tag) => (
                        <button
                            data-tag={tag}
                            class="tag"
                            style={{ color: tagColors[tag] }}
                        >
                            #{tag}
                        </button>
                    ))}
                </li>
            ))
        }
    </ul>
</Layout>

<script>
    const tags = document.querySelectorAll(".tag");
    tags.forEach((tag) => {
        tag.addEventListener("click", (el) => {
            window.location.hash = tag.dataset.tag;
        });
    });

    const showOnlyTag = (tagToShow: string) => {
        const all = document.querySelectorAll("li");
        all.forEach((el) => (el.style.display = "block"));

        if (tagToShow === "") {
            return;
        }

        const toHide = Array.from(all).filter((el) => {
            const tags = el.querySelectorAll(".tag");
            return !Array.from(tags).some((tag) => {
                return tag.dataset.tag === tagToShow;
            });
        });
        toHide.forEach((el) => (el.style.display = "none"));
    };

    window.addEventListener("hashchange", (event) => {
        showOnlyTag(window.location.hash.slice(1));
        console.log("hi");
    });

    if (window.location.hash) {
        debugger;
        showOnlyTag(window.location.hash.slice(1));
    }
</script>

-->
